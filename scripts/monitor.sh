#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Teo Bot –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./monitor.sh [instance-name]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
}

info() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')] INFO: $1${NC}"
}

# –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏–Ω—Å—Ç–∞–Ω—Å–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
INSTANCE_NAME=${1:-"teo-bot-instance"}

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Teo Bot –Ω–∞ –∏–Ω—Å—Ç–∞–Ω—Å–µ: $INSTANCE_NAME"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç–∞–Ω—Å–∞
if ! yc compute instance get $INSTANCE_NAME &> /dev/null; then
    error "–ò–Ω—Å—Ç–∞–Ω—Å $INSTANCE_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º –≤–Ω–µ—à–Ω–∏–π IP –∞–¥—Ä–µ—Å –∏–Ω—Å—Ç–∞–Ω—Å–∞
INSTANCE_IP=$(yc compute instance get $INSTANCE_NAME --format=json | jq -r '.network_interfaces[0].primary_v4_address.one_to_one_nat.address')

info "IP –∞–¥—Ä–µ—Å –∏–Ω—Å—Ç–∞–Ω—Å–∞: $INSTANCE_IP"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–Ω—Å—Ç–∞–Ω—Å–∞
INSTANCE_STATUS=$(yc compute instance get $INSTANCE_NAME --format=json | jq -r '.status')
if [ "$INSTANCE_STATUS" = "RUNNING" ]; then
    log "‚úÖ –ò–Ω—Å—Ç–∞–Ω—Å –∑–∞–ø—É—â–µ–Ω"
else
    error "‚ùå –ò–Ω—Å—Ç–∞–Ω—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω (—Å—Ç–∞—Ç—É—Å: $INSTANCE_STATUS)"
    exit 1
fi

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
ssh -o StrictHostKeyChecking=no ubuntu@$INSTANCE_IP << 'EOF'
    echo "=== –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´ ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞
    echo "üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
    df -h / | tail -1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
    echo -e "\nüìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:"
    free -h
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É CPU
    echo -e "\nüìä –ó–∞–≥—Ä—É–∑–∫–∞ CPU:"
    uptime
    
    echo -e "\n=== –ü–†–û–í–ï–†–ö–ê DOCKER ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Docker
    if systemctl is-active --quiet docker; then
        echo "‚úÖ Docker –∑–∞–ø—É—â–µ–Ω"
    else
        echo "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    echo -e "\nüìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    cd /home/ubuntu/teo-bot
    docker-compose ps
    
    echo -e "\n=== –ü–†–û–í–ï–†–ö–ê –°–ï–†–í–ò–°–ê ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º systemd —Å–µ—Ä–≤–∏—Å
    echo "üìä –°—Ç–∞—Ç—É—Å systemd —Å–µ—Ä–≤–∏—Å–∞:"
    sudo systemctl is-active teo-bot.service
    
    echo -e "\nüìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞:"
    sudo journalctl -u teo-bot.service --no-pager -n 10
    
    echo -e "\n=== –ü–†–û–í–ï–†–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    echo "üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
    docker-compose logs --tail=10
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    echo -e "\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    docker-compose exec -T teo-bot env | grep -E "(TELEGRAM_BOT_TOKEN|WEATHER_API_KEY|DEFAULT_CITY|TIMEZONE)" || echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö
    echo -e "\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö:"
    if [ -f teo_bot.db ]; then
        echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞ ($(ls -lh teo_bot.db | awk '{print $5}'))"
    else
        echo "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    if [ -f user_habits.json ]; then
        echo "‚úÖ –§–∞–π–ª –ø—Ä–∏–≤—ã—á–µ–∫ –Ω–∞–π–¥–µ–Ω ($(ls -lh user_habits.json | awk '{print $5}'))"
    else
        echo "‚ùå –§–∞–π–ª –ø—Ä–∏–≤—ã—á–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
    echo -e "\nüìä –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏:"
    if [ -d backups ]; then
        echo "‚úÖ –ü–∞–ø–∫–∞ –±—ç–∫–∞–ø–æ–≤ –Ω–∞–π–¥–µ–Ω–∞"
        ls -la backups/ | tail -5
    else
        echo "‚ùå –ü–∞–ø–∫–∞ –±—ç–∫–∞–ø–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    echo -e "\n=== –ü–†–û–í–ï–†–ö–ê –°–ï–¢–ò ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
    if ping -c 1 8.8.8.8 &> /dev/null; then
        echo "‚úÖ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram API
    if curl -s https://api.telegram.org &> /dev/null; then
        echo "‚úÖ Telegram API –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        echo "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å Telegram API"
    fi
    
    echo -e "\n=== –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò ==="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ
    DISK_USAGE=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')
    if [ "$DISK_USAGE" -gt 80 ]; then
        echo "‚ö†Ô∏è  –ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ ($DISK_USAGE%)"
    else
        echo "‚úÖ –ú–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ($DISK_USAGE%)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
    UPTIME_DAYS=$(uptime | awk '{print $3}' | sed 's/,//')
    echo "üìÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç: $UPTIME_DAYS"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    LAST_UPDATE=$(stat -c %Y /var/cache/apt/ 2>/dev/null || echo 0)
    CURRENT_TIME=$(date +%s)
    DAYS_SINCE_UPDATE=$(( (CURRENT_TIME - LAST_UPDATE) / 86400 ))
    
    if [ "$DAYS_SINCE_UPDATE" -gt 7 ]; then
        echo "‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–∞ –Ω–µ –æ–±–Ω–æ–≤–ª—è–ª–∞—Å—å $DAYS_SINCE_UPDATE –¥–Ω–µ–π"
    else
        echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–µ–¥–∞–≤–Ω–æ"
    fi
EOF

log "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!"
