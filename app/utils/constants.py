"""
Constants for Teo bot
Centralized constants to eliminate hardcoded values
"""
import os
from pathlib import Path

# File paths
ASSETS_DIR = Path("assets")
DATA_DIR = Path("data")

# Bot avatar images
BOT_AVATAR_START = ASSETS_DIR / "bot_avatar_for_start.jpeg"
BOT_AVATAR_WEATHER = ASSETS_DIR / "bot_avatar_for_weather.jpg"
BOT_AVATAR_NEWS = ASSETS_DIR / "bot_avatar_for_news.jpeg"
BOT_AVATAR_DEFAULT = ASSETS_DIR / "bot_avatar.jpg"

# Database files
DATABASE_FILE = DATA_DIR / "teo_bot.db"
USER_HABITS_FILE = DATA_DIR / "user_habits.json"

# Default values
DEFAULT_CITY = "Saint Petersburg"
DEFAULT_TIMEZONE = "UTC"
DEFAULT_NOTIFICATION_TIME = "08:00"
DEFAULT_HABIT_TIME = "09:00"
DEFAULT_LANGUAGE = "ru"

# Time formats
TIME_FORMAT = "%H:%M"
DATE_FORMAT = "%Y-%m-%d"
DATETIME_FORMAT = "%Y-%m-%d %H:%M:%S"

# Pagination
DEFAULT_PAGE_SIZE = 5
MAX_PAGE_SIZE = 10

# API limits
MAX_RETRIES = 3
REQUEST_TIMEOUT = 10
WEATHER_CACHE_TIME = 300  # 5 minutes
NEWS_CACHE_TIME = 600     # 10 minutes

# Callback data prefixes
CALLBACK_PREFIXES = {
    "WEATHER": "weather_",
    "NEWS": "news_",
    "HABIT": "habit_",
    "FINANCE": "finance_",
    "SETTINGS": "settings_",
    "CITY": "city_",
    "TIME": "time_",
    "TIMEZONE": "timezone_"
}

# Weather conditions
WEATHER_CONDITIONS = {
    "rain": ["rain", "drizzle", "shower"],
    "snow": ["snow", "sleet"],
    "storm": ["thunderstorm"],
    "cloudy": ["clouds", "overcast"],
    "clear": ["clear", "sunny"]
}

# Habit categories
HABIT_CATEGORIES = {
    "health": "–ó–¥–æ—Ä–æ–≤—å–µ",
    "productivity": "–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
    "learning": "–û–±—É—á–µ–Ω–∏–µ",
    "fitness": "–§–∏—Ç–Ω–µ—Å",
    "mindfulness": "–û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å",
    "social": "–°–æ—Ü–∏–∞–ª—å–Ω–æ–µ",
    "finance": "–§–∏–Ω–∞–Ω—Å—ã",
    "custom": "–°–≤–æ—è"
}

# News categories
NEWS_CATEGORIES = {
    "latest": "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏",
    "popular": "–ì–ª–∞–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏",
    "sports": "–°–ø–æ—Ä—Ç",
    "economy": "–≠–∫–æ–Ω–æ–º–∏–∫–∞ –∏ –±–∏–∑–Ω–µ—Å",
    "technology": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –Ω–∞—É–∫–∞"
}

# Finance periods
FINANCE_PERIODS = {
    "day": "–¥–µ–Ω—å",
    "week": "–Ω–µ–¥–µ–ª—é",
    "month": "–º–µ—Å—è—Ü",
    "year": "–≥–æ–¥",
    "all": "–≤—Å–µ –≤—Ä–µ–º—è"
}

# Notification types
NOTIFICATION_TYPES = {
    "weather": "–ü–æ–≥–æ–¥–∞",
    "rain": "–î–æ–∂–¥—å",
    "habit": "–ü—Ä–∏–≤—ã—á–∫–∞",
    "news": "–ù–æ–≤–æ—Å—Ç–∏"
}

# Error messages
ERROR_MESSAGES = {
    "file_not_found": "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω",
    "invalid_input": "–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥",
    "network_error": "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏",
    "api_error": "–û—à–∏–±–∫–∞ API",
    "database_error": "–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
    "permission_error": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤",
    "timeout_error": "–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è"
}

# Success messages
SUCCESS_MESSAGES = {
    "settings_updated": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã",
    "habit_created": "–ü—Ä–∏–≤—ã—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∞",
    "habit_completed": "–ü—Ä–∏–≤—ã—á–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞",
    "city_updated": "–ì–æ—Ä–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω",
    "time_updated": "–í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ",
    "finance_configured": "–§–∏–Ω–∞–Ω—Å—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
}

# Emojis
EMOJIS = {
    "weather": "üå§",
    "news": "üì∞",
    "habit": "üéØ",
    "finance": "üí∞",
    "settings": "‚öôÔ∏è",
    "help": "‚ùì",
    "back": "üîô",
    "refresh": "üîÑ",
    "success": "‚úÖ",
    "error": "‚ùå",
    "warning": "‚ö†Ô∏è",
    "info": "‚ÑπÔ∏è",
    "loading": "‚è≥",
    "rain": "üåß",
    "sun": "‚òÄÔ∏è",
    "cloud": "‚òÅÔ∏è",
    "snow": "‚ùÑÔ∏è",
    "storm": "‚õà",
    "city": "üåç",
    "time": "‚è∞",
    "timezone": "üåê",
    "notification": "üîî",
    "stats": "üìä",
    "add": "‚ûï",
    "delete": "üóëÔ∏è",
    "edit": "‚úèÔ∏è",
    "check": "‚úÖ",
    "cross": "‚ùå",
    "arrow_right": "‚û°Ô∏è",
    "arrow_left": "‚¨ÖÔ∏è",
    "home": "üè†",
    "star": "‚≠ê",
    "fire": "üî•",
    "calendar": "üìÖ",
    "clock": "üïê",
    "chart": "üìà",
    "money": "üíµ",
    "card": "üí≥",
    "bank": "üè¶",
    "shopping": "üõí",
    "food": "üçï",
    "transport": "üöó",
    "entertainment": "üé¨",
    "health": "üè•",
    "education": "üìö",
    "sport": "‚öΩ",
    "work": "üíº",
    "family": "üë®‚Äçüë©‚Äçüëß‚Äçüë¶",
    "travel": "‚úàÔ∏è",
    "gift": "üéÅ",
    "other": "üì¶"
}

# Validation rules
VALIDATION_RULES = {
    "city_name": {
        "min_length": 2,
        "max_length": 50,
        "pattern": r"^[a-zA-Z–∞-—è–ê-–Ø\s\-']+$"
    },
    "habit_name": {
        "min_length": 3,
        "max_length": 100
    },
    "habit_description": {
        "max_length": 500
    },
    "time_format": {
        "pattern": r"^([01]?[0-9]|2[0-3]):[0-5][0-9]$"
    },
    "url": {
        "pattern": r"^https?://.*$"
    }
}

# Cache keys
CACHE_KEYS = {
    "weather": "weather_{city}",
    "forecast": "forecast_{city}",
    "news": "news_{category}",
    "user_settings": "user_settings_{user_id}",
    "user_habits": "user_habits_{user_id}"
}

# Logging
LOG_LEVELS = {
    "DEBUG": "DEBUG",
    "INFO": "INFO",
    "WARNING": "WARNING",
    "ERROR": "ERROR",
    "CRITICAL": "CRITICAL"
}

# Environment variables
ENV_VARS = {
    "BOT_TOKEN": "TELEGRAM_BOT_TOKEN",
    "WEATHER_API_KEY": "WEATHER_API_KEY",
    "NEWS_API_KEY": "NEWS_API_KEY",
    "DEFAULT_CITY": "DEFAULT_CITY",
    "TIMEZONE": "TIMEZONE",
    "LOG_LEVEL": "LOG_LEVEL"
}
